
body {

    background: #f5f5f5;
}

/**
版型
 */

.jd_container {

    /**
    通过这两个设置了元素的最大和最小的宽度,但宽度大于这个时,不在拉伸
    小于这个时,不在缩放,通过设置最大和最小的宽度就已经决定了该界面的大小
     */
    min-width: 320px;
    max-width: 640px;
    width: 100%;
    margin: 0 auto;
    /*height: 1000px;*/
}

/**
顶部搜索
 */
.jd_search {
    /**
    这里使用的是固定定位,那门宽度的计算将是定位的父类的宽度,这时候大小为屏幕的大小
    具体的可以查看css文档
     */
    width: 100%;
    height: 40px;
    position: fixed;
    left: 0;
    top: 0;
    z-index: 1000;
}

/**
内容居中
 */
.jd_search .jd_search_box {

    background: rgba(201, 21, 35, 0);
    height: 40px;
    min-width: 320px;
    max-width: 640px;
    width: 100%;
    margin: 0 auto;
    position: relative;
}

.jd_search .jd_search_box .icon_logo {
    position: absolute;
    left: 0px;
    top: 0px;
    width: 60px;
    height: 40px;
    line-height: 40px;
    text-align: center;
    color: #fff;

    /**
    在这个实例的课程中,使用的png图片的大小是400px X 400px
    通过指定图片的大小是原来的1/2,代表的图片进行了压缩,
    这时候,前面的定位就需要同时进行/2操作
    在实际的测量过程中,测量的值是210px ,除以2之后就变成了105px
    在base里面设置了公用的属性
     */
    background-position: 0 -105px;
}

.jd_search .jd_search_box .login {
    position: absolute;
    right: 0px;
    top: 0px;
    width: 50px;
    height: 40px;
    line-height: 40px;
    text-align: center;
    color: #ffffff;
}

.jd_search .jd_search_box form {
    width: 100%;
    padding-left: 60px;
    padding-right: 50px;
    position: relative;
}

.jd_search .jd_search_box form .icon_search {

    width: 20px;
    height: 20px;
    position: absolute;
    left: 70px;
    top: 10px;
    background: pink;
}

/**
百分比的计算基于父容器的内容的宽度
 */
.jd_search .jd_search_box form input {
    width: 100%;
    height: 30px;
    margin-top: 5px;
    background: #fff;
    -webkit-border-radius: 15px;
    -moz-border-radius: 15px;
    border-radius: 15px;
    padding-left: 40px;
}

/**
轮播图的实现
 */

.jd_banner {
    width: 100%;
    overflow: hidden;
    position: relative;
}

.jd_banner ul:first-child {

    /**
    这个是盒子,由于在这个盒子中我们需要存放10张图片,每张图片的大小是100%
    那么我们就不可能在使用width:100%来进行设置,原因是存放不下这十张图片
     */
    width: 1000%;
    -webkit-transform: translateX(-10%);
}

.jd_banner ul:first-child li {

    /**
    由于ul使用的width:1000%,li是parent的10%就是100%
     */
    width: 10%;
    float: left;
}

.jd_banner ul:first-child li a {

    display: block;
    width: 100%;
}

.jd_banner ul:first-child li a img {
    /**
    去掉图片的下间隙,不固定是多大(下边距)
    方案1:font-size:0px;
    方案2:display:block
    方案3:vertical-align:middle
     */
    display: block;
    width: 100%;
}

.jd_banner ul:last-child {
    position: absolute;
    left: 50%;
    margin-left: -59px;
    bottom: 6px;
    width: 118px;
    height: 6px;
}

.jd_banner ul:last-child li {
    width: 6px;
    height: 6px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px;
    border: 1px solid #ffffff;
    margin-left: 10px;
    float: left;
}

.jd_banner ul:last-child li:first-child {
    margin-left: 0px;
}

.jd_banner ul:last-child li.now {
    background: #ffffff;
}

/**
导航栏的实现
 */
.jd_nav {
    background: #ffffff;
    width: 100%;
    border-bottom: 1px solid #ccc;
}

.jd_nav ul {
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
}

.jd_nav ul li {
    width: 25%;
    float: left;
}

.jd_nav ul li a {
    display: block;
    width: 100%;
}

.jd_nav ul li a img {
    width: 40px;
    display: block;
    height: 40px;
    margin: 0 auto;
}

.jd_nav ul li a p {
    text-align: center;
    font-size: 12px;
    color: #666;
    padding: 5px 0;
}

/**
产品区块
 */

.jd_product {
    padding: 0 5px;
}

/**
产品盒子
 */
.jd_product .jd_product_box {
    margin-top: 10px;
    box-shadow: 0 0 2px #ccc;
    min-height: 200px;
    background: #ffffff;
}

.jd_product .jd_product_box .title {

    height: 34px;

}

.jd_product .jd_product_box .title.nb {
    border-bottom: none;
}

.jd_product .jd_product_box .title h3 {
    font-weight: normal;
    position: relative;
    padding-left: 23px;
}

/**
在h3前面有一个红色的标志,我们可以使用伪类实现,不在使用<span></span>进行修饰
减少了代码,同时::before是行内元素,我们不能设置宽高,通过设置position来为这个标志赋予设置宽高的能力
 */
.jd_product .jd_product_box .title h3::before {
    content: '';
    width: 3px;
    height: 12px;
    position: absolute;
    background: #d8505c;
    left: 10px;
    top: 11px;
}

/**
秒杀模块
 */
.sk .icon {
    width: 16px;
    height: 20px;
    float: left;
    margin-left: 10px;
    margin-top: 7px;
    background: url("image") no-repeat center/16px 20px;
}

.sk .name {
    float: left;
    margin-left: 10px;
    font-size: 12px;
    color: #d8505c;
    /*padding-top: 7px;*/
}

.sk .time {
    float: right;
    margin-left: 10px;
}

.sk .time span {
    float: left;
    width: 16px;
    height: 16px;
    line-height: 16px;
    text-align: center;
    color: #ffffff;
    background: #333;
    margin-left: 3px;
    margin-top: 9px;
}

/**
选中的是span的3的倍数
索引位置起始为1
 */
.sk .time span:nth-child(3n) {
    background: #fff;
    width: 3px;
    color: #333;
}

.sk .pro {
    width: 100%;
    padding: 10px 0;
}

.sk .pro li {
    width: 33.3333%;
    float: left;
}

.sk .pro li:last-child a {
    border-right: none;
}

.sk .pro li a {
    display: block;
    border-right: 1px solid #dddddd;
}

.sk .pro li a img {
    display: block;
    margin: 0 auto;
    width: 64%;
}

.sk .pro li p {
    text-align: center;
    font-size: 12px;
    padding: 5px 0;
}

.sk .pro li .nowPrice {
    color: #d8505c;
}

.sk .pro li .oldPrice {
    color: #666;
    text-decoration: line-through;
}

/**
组合样式的使用
 */

.w_50p {
    width: 50%;
}

.w_50p img {
    display: block;
    width: 100%;
}

.bl {
    border-left: 1px solid #dddddd;
}

.br {
    border-right: 1px solid #dddddd;
}

.bb {
    border-bottom: 1px solid #dddddd;
}















